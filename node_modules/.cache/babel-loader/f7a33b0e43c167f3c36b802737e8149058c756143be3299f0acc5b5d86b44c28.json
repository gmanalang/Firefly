{"ast":null,"code":"var _jsxFileName = \"/Users/anshpatel/Desktop/Programming/Personal/Expiraments/Oasis-firefly/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { getDownloadURL, listAll, ref, uploadBytes, deleteObject, getStorage } from \"firebase/storage\";\nimport { storage } from \"./firebase/firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentSession, setCurrentSession] = useState();\n  const [imageUpload, setImageHolder] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  const imageListRef = ref(storage, `sessions/${currentSession}`);\n  const sessionListRef = ref(storage, \"sessions/\");\n  const [files, setFiles] = useState([]);\n  const [, setImageRef] = useState(\"\");\n  const [, setImageUrls] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  async function refreshFiles() {\n    await setRefresh(!refresh);\n  }\n  async function getObjectInfo(object) {\n    const storage = getStorage(object._service.app);\n    const path = object._location.path_;\n    const id = Math.floor(Math.random() * 100);\n    const name = path.split('/').pop();\n    const storageRef = ref(storage, path);\n    const url = await getDownloadURL(storageRef);\n    return {\n      id,\n      name,\n      url\n    };\n  }\n\n  /**\n   *\n   * @returns {boolean} true if password is correct, false otherwise\n   */\n  // const uploadImageHandler = async () => {\n  //   if (imageUpload == null) {\n  //     return;\n  //   }\n\n  //   let currentImageRef = ref(\n  //     storage,\n  //     `sessions/${currentSession}/${imageUpload.name}`\n  //   );\n\n  //   setImageRef(currentImageRef);\n\n  //   uploadBytes(currentImageRef, imageUpload).then((snapshot) => {\n  //     setImageList((prev) => [...prev, snapshot.ref]);\n  //   });\n\n  //   await refreshFiles();\n  // };\n\n  /**\n   *\n   * @returns {boolean} true if password is correct, false otherwise\n   */\n  const uploadImageHandler = async () => {\n    if (imageUpload == null) {\n      return;\n    }\n    let currentImageRef = ref(storage, `sessions/${currentSession}/${imageUpload.name}`);\n    setImageRef(currentImageRef);\n    const snapshot = await uploadBytes(currentImageRef, imageUpload);\n\n    // Get the file information for the uploaded image\n    const uploadedFileInfo = await getObjectInfo(snapshot.ref);\n\n    // Update the files state with the uploaded file information\n    setFiles(prev => [...prev, uploadedFileInfo]);\n    await refreshFiles();\n  };\n\n  /**\n   *\n   * @param {*} url\n   */\n  const downloadImageHandler = (url, name) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = \"blob\";\n    xhr.onload = event => {\n      const blob = xhr.response;\n      const a = document.createElement(\"a\");\n      const urlObject = window.URL.createObjectURL(blob);\n      a.href = urlObject;\n      a.download = name; // the file name\n      a.style.display = \"none\";\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(urlObject);\n      document.body.removeChild(a);\n    };\n    xhr.open(\"GET\", url);\n    xhr.send();\n  };\n\n  /**\n   *  Gets the list of images from the database and sets the imageList state\n   *\n   */\n  const deleteImageHandler = () => {\n    listAll(imageListRef).then(response => {\n      response.items.forEach(item => {\n        deleteObject(item).then(() => {}).catch(error => {});\n      });\n    }).catch(error => {});\n    setImageList([]);\n    refreshFiles();\n  };\n  const deleteSingleHandler = async url => {\n    try {\n      const response = await listAll(imageListRef);\n      const itemPromises = response.items.map(async item => {\n        const itemUrl = await getDownloadURL(item);\n        if (itemUrl === url) {\n          try {\n            await deleteObject(item);\n            setImageList(prev => [...prev.filter(i => i !== itemUrl)]);\n          } catch (error) {}\n        }\n      });\n\n      // Wait for all itemPromises to complete before resolving\n      await Promise.all(itemPromises);\n    } catch (error) {}\n  };\n\n  /*\n   * Checks the password against the files in database\n   *\n   */\n  const passwordHandler = async pin => {\n    let check = await checkPasswordRepo(pin);\n    if (check) {\n      setCurrentSession(pin);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const checkPasswordRepo = async password => {\n    let out = false;\n    let responses = await listAll(sessionListRef).then(response => response).catch(error => {\n      return false;\n    });\n    responses.prefixes.forEach(prefix => {\n      if (prefix._location.path.split(\"/\")[1] === password) {\n        out = true;\n      }\n    });\n    return out;\n  };\n  const generateSessionHandler = async () => {\n    let randSession = Math.floor(Math.random() * 90000 + 10000);\n    let check = await checkPasswordRepo(randSession);\n    while (check) {\n      randSession = Math.floor(Math.random() * 90000 + 10000);\n      check = await checkPasswordRepo(randSession);\n    }\n    setCurrentSession(randSession);\n  };\n  const fetchUrls = async item => {\n    const url = await getDownloadURL(item);\n    setImageUrls(prev => [...prev, url]);\n  };\n\n  ////////////////////////////\n  // APP SWITCHER\n  ////////////////////////////\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // Use the useEffect hook to apply the CSS classes based on the condition\n  useEffect(() => {\n    if (activeIndex === 0) {\n      document.body.className = \"panel-landing\";\n    } else {\n      document.body.className = \"bodyClass2\";\n    }\n\n    // Cleanup function to remove the classes when the component is unmounted\n    return () => {\n      document.body.className = \"\";\n    };\n  }, [activeIndex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      isActive: activeIndex === 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Landing, {\n          onAction: () => setActiveIndex(1),\n          generateSessionHandler: generateSessionHandler,\n          passwordHandler: passwordHandler,\n          refreshFiles: refreshFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      isActive: activeIndex === 1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel1\",\n        children: /*#__PURE__*/_jsxDEV(UploadDownload, {\n          onAction: () => setActiveIndex(0),\n          currentSession: currentSession,\n          setImageHolder: setImageHolder,\n          uploadImageHandler: uploadImageHandler,\n          deleteImageHandler: deleteImageHandler,\n          setImageList: setImageList,\n          setImageUrls: setImageUrls,\n          imageListRef: imageListRef,\n          fetchUrls: fetchUrls,\n          imageList: imageList,\n          downloadImageHandler: downloadImageHandler,\n          deleteSingleHandler: deleteSingleHandler,\n          refresh: refresh,\n          refreshFiles: refreshFiles,\n          setFiles: setFiles,\n          getObjectInfo: getObjectInfo,\n          files: files\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  ////////////////////////////\n  // END APP SWITCHER\n  ////////////////////////////\n}\n_s(App, \"cskcnapN6gye1ryy39ZwNGEQEw8=\");\n_c = App;\nfunction Panel(_ref) {\n  let {\n    children,\n    isActive\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"panel\",\n    children: isActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 44\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Panel;\nexport function Landing(_ref2) {\n  _s2();\n  let {\n    onAction,\n    generateSessionHandler,\n    passwordHandler,\n    refreshFiles\n  } = _ref2;\n  const [AuthPin, setAuthPin] = useState(\"\");\n  const handleAuth = v => {\n    if (v.length <= 5) {\n      setAuthPin(v);\n    }\n  };\n  function generateCode() {\n    onAction();\n    generateSessionHandler();\n  }\n  async function handleSubmitCode() {\n    if (await passwordHandler(AuthPin)) {\n      await refreshFiles();\n      onAction();\n    } else {\n      alert(\"Incorrect Pin\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-link\",\n      children: \"Firefly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-23\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-24\",\n          onClick: generateCode,\n          children: \"New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"input pin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: AuthPin,\n        onChange: e => handleAuth(e.target.value),\n        className: \"space\",\n        type: \"number\",\n        id: \"pin\",\n        pattern: \"\\\\d*\",\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitCode,\n        className: `button-25${AuthPin.length !== 5 ? \" disabled\" : \"\"}`,\n        disabled: AuthPin.length !== 5,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\n_s2(Landing, \"9YyoncIVluZ2IDiJ/ryztMTT3ok=\");\n_c3 = Landing;\nexport function UploadDownload(_ref3) {\n  let {\n    onAction,\n    currentSession,\n    setImageHolder,\n    uploadImageHandler,\n    deleteImageHandler,\n    setImageList,\n    setImageUrls,\n    imageListRef,\n    fetchUrls,\n    imageList,\n    downloadImageHandler,\n    deleteSingleHandler,\n    refresh,\n    refreshFiles,\n    getObjectInfo,\n    setFiles,\n    files\n  } = _ref3;\n  function triggerFileInputClick() {\n    document.getElementById(\"hiddenFileInput\").click();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      setImageList: setImageList,\n      setImageUrls: setImageUrls,\n      imageListRef: imageListRef,\n      fetchUrls: fetchUrls,\n      currentSession: currentSession,\n      imageList: imageList,\n      deleteSingleHandler: deleteSingleHandler,\n      downloadImageHandler: downloadImageHandler,\n      refresh: refresh,\n      refreshFiles: refreshFiles,\n      getObjectInfo: getObjectInfo,\n      setFiles: setFiles,\n      files: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-link-2\",\n        children: \"Firefly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcode\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"buttons-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"hiddenFileInput\",\n          style: {\n            display: \"none\"\n          },\n          onChange: event => setImageHolder(event.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: triggerFileInputClick,\n          className: \"button-25\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button-25\",\n          onClick: uploadImageHandler,\n          children: \"Send File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button-26\",\n          onClick: deleteImageHandler,\n          children: \"Delete All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button-26\",\n          onClick: refreshFiles,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcode-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"time left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          deleteImageHandler: deleteImageHandler,\n          onAction: onAction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n}\n_c4 = UploadDownload;\nexport function Table(_ref4) {\n  _s3();\n  let {\n    setImageList,\n    imageListRef,\n    currentSession,\n    deleteSingleHandler,\n    downloadImageHandler,\n    refresh,\n    refreshFiles,\n    getObjectInfo,\n    setFiles,\n    files\n  } = _ref4;\n  const downloadFile = (url, name) => {\n    downloadImageHandler(url, name);\n  };\n  const deleteFile = async url => {\n    await deleteSingleHandler(url);\n    refreshFiles();\n  };\n\n  //   async function fileList(item) {\n  //     // let objectList = await Promise.all(imageList.map((item) => getObjectInfo(item)));\n  //     let obj = await getObjectInfo(item);\n  //     // objectList = objectList.slice(0, objectList.length / 2);\n  //     setFiles(prev => [...prev, obj]);\n  // }\n\n  const fetchFiles = async () => {\n    try {\n      const response = await listAll(imageListRef);\n      const filePromises = response.items.map(async item => {\n        const fileInfo = await getObjectInfo(item);\n        return fileInfo;\n      });\n      const fetchedFiles = await Promise.all(filePromises);\n      setFiles(fetchedFiles);\n    } catch (error) {\n      console.log('Error fetching files:', error);\n    }\n  };\n  useEffect(() => {\n    setFiles([]);\n    fetchFiles();\n    // eslint-disable-next-line\n  }, [currentSession, refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-25\",\n              onClick: () => downloadFile(file.url, file.name),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-25\",\n              onClick: () => deleteFile(file.url),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this)]\n        }, file.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 5\n  }, this);\n}\n_s3(Table, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c5 = Table;\nexport function Timer(_ref5) {\n  _s4();\n  let {\n    deleteImageHandler,\n    onAction\n  } = _ref5;\n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  // im just testing my git here so ignore this line\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState(\"00:00:00\");\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to\n      // add '0' at the beginning of the variable\n      setTimer((hours > 9 ? hours : \"0\" + hours) + \":\" + (minutes > 9 ? minutes : \"0\" + minutes) + \":\" + (seconds > 9 ? seconds : \"0\" + seconds));\n    } else {\n      // When the timer reaches zero, call the deleteImageHandler\n      deleteImageHandler();\n      onAction();\n      alert(\"Time's up!\");\n\n      // Clear the interval to stop the timer\n      if (Ref.current) clearInterval(Ref.current);\n    }\n  };\n  const clearTimer = e => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next\n    // ADJUST TO CHANGE THE AMOUNT OF TIME\n    setTimer(\"00:15:00\");\n\n    // If you try to remove this line the\n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // ADJUST THE NUMBER OF SECONDS IN THE TIMER HERE (currently 900)\n    deadline.setSeconds(deadline.getSeconds() + 900);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Another way to call the clearTimer() to start\n  // the countdown is via action event from the\n  // button first we create function to be called\n  // by the button\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 639,\n    columnNumber: 5\n  }, this);\n}\n_s4(Timer, \"38z5z2E9on0hBZZjKpzRYdf37QM=\");\n_c6 = Timer;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Panel\");\n$RefreshReg$(_c3, \"Landing\");\n$RefreshReg$(_c4, \"UploadDownload\");\n$RefreshReg$(_c5, \"Table\");\n$RefreshReg$(_c6, \"Timer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","getDownloadURL","listAll","ref","uploadBytes","deleteObject","getStorage","storage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentSession","setCurrentSession","imageUpload","setImageHolder","imageList","setImageList","imageListRef","sessionListRef","files","setFiles","setImageRef","setImageUrls","refresh","setRefresh","refreshFiles","getObjectInfo","object","_service","app","path","_location","path_","id","Math","floor","random","name","split","pop","storageRef","url","uploadImageHandler","currentImageRef","snapshot","uploadedFileInfo","prev","downloadImageHandler","xhr","XMLHttpRequest","responseType","onload","event","blob","response","a","document","createElement","urlObject","window","URL","createObjectURL","href","download","style","display","body","appendChild","click","revokeObjectURL","removeChild","open","send","deleteImageHandler","then","items","forEach","item","catch","error","deleteSingleHandler","itemPromises","map","itemUrl","filter","i","Promise","all","passwordHandler","pin","check","checkPasswordRepo","password","out","responses","prefixes","prefix","generateSessionHandler","randSession","fetchUrls","activeIndex","setActiveIndex","className","children","Panel","isActive","Landing","onAction","fileName","_jsxFileName","lineNumber","columnNumber","UploadDownload","_c","_ref","_c2","_ref2","_s2","AuthPin","setAuthPin","handleAuth","v","length","generateCode","handleSubmitCode","alert","class","onClick","value","onChange","e","target","type","pattern","inputMode","disabled","_c3","_ref3","triggerFileInputClick","getElementById","Table","Timer","_c4","_ref4","_s3","downloadFile","deleteFile","fetchFiles","filePromises","fileInfo","fetchedFiles","console","log","file","_c5","_ref5","_s4","Ref","timer","setTimer","getTimeRemaining","total","Date","parse","seconds","minutes","hours","startTimer","current","clearInterval","clearTimer","setInterval","getDeadTime","deadline","setSeconds","getSeconds","_c6","$RefreshReg$"],"sources":["/Users/anshpatel/Desktop/Programming/Personal/Expiraments/Oasis-firefly/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  getDownloadURL,\n  listAll,\n  ref,\n  uploadBytes,\n  deleteObject,\n  getStorage\n} from \"firebase/storage\";\nimport { storage } from \"./firebase/firebase.js\";\n\nfunction App() {\n  const [currentSession, setCurrentSession] = useState();\n  const [imageUpload, setImageHolder] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  const imageListRef = ref(storage, `sessions/${currentSession}`);\n  const sessionListRef = ref(storage, \"sessions/\");\n  const [files, setFiles] = useState([]);\n  const [, setImageRef] = useState(\"\");\n  const [, setImageUrls] = useState([]);\n\n\n  const [refresh, setRefresh] = useState(false);\n\n  async function refreshFiles() {\n    await setRefresh(!refresh);\n  }\n\n  async function getObjectInfo(object) {\n    const storage = getStorage(object._service.app);\n    const path = object._location.path_;\n    const id = Math.floor(Math.random() * 100);\n    const name = path.split('/').pop();\n    const storageRef = ref(storage, path);\n    const url = await getDownloadURL(storageRef);\n\n    return {\n        id,\n        name,\n        url\n    };\n  }\n\n  /**\n   *\n   * @returns {boolean} true if password is correct, false otherwise\n   */\n  // const uploadImageHandler = async () => {\n  //   if (imageUpload == null) {\n  //     return;\n  //   }\n\n  //   let currentImageRef = ref(\n  //     storage,\n  //     `sessions/${currentSession}/${imageUpload.name}`\n  //   );\n\n  //   setImageRef(currentImageRef);\n\n  //   uploadBytes(currentImageRef, imageUpload).then((snapshot) => {\n  //     setImageList((prev) => [...prev, snapshot.ref]);\n  //   });\n\n  //   await refreshFiles();\n  // };\n  \n  /**\n   *\n   * @returns {boolean} true if password is correct, false otherwise\n   */\n  const uploadImageHandler = async () => {\n    if (imageUpload == null) {\n      return;\n    }\n  \n    let currentImageRef = ref(\n      storage,\n      `sessions/${currentSession}/${imageUpload.name}`\n    );\n  \n    setImageRef(currentImageRef);\n  \n    const snapshot = await uploadBytes(currentImageRef, imageUpload);\n  \n    // Get the file information for the uploaded image\n    const uploadedFileInfo = await getObjectInfo(snapshot.ref);\n  \n    // Update the files state with the uploaded file information\n    setFiles((prev) => [...prev, uploadedFileInfo]);\n  \n    await refreshFiles();\n  };\n  \n  /**\n   *\n   * @param {*} url\n   */\n  const downloadImageHandler = (url, name) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = \"blob\";\n    xhr.onload = (event) => {\n      const blob = xhr.response;\n      const a = document.createElement(\"a\");\n      const urlObject = window.URL.createObjectURL(blob);\n      a.href = urlObject;\n      a.download = name; // the file name\n      a.style.display = \"none\";\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(urlObject);\n      document.body.removeChild(a);\n    };\n    xhr.open(\"GET\", url);\n    xhr.send();\n  };\n\n  /**\n   *  Gets the list of images from the database and sets the imageList state\n   *\n   */\n  const deleteImageHandler = () => {\n    listAll(imageListRef)\n      .then((response) => {\n        response.items.forEach((item) => {\n          deleteObject(item)\n            .then(() => {\n            })\n            .catch((error) => {\n            });\n        });\n      })\n      .catch((error) => {\n      });\n    setImageList([]);\n    refreshFiles();\n  };\n\n  const deleteSingleHandler = async (url) => {\n    try {\n      const response = await listAll(imageListRef);\n      \n      const itemPromises = response.items.map(async (item) => {\n        const itemUrl = await getDownloadURL(item);\n  \n        if (itemUrl === url) {\n          try {\n            await deleteObject(item);\n            setImageList((prev) => [\n              ...prev.filter((i) => i !== itemUrl),\n            ]);\n          } catch (error) {\n          }\n        }\n      });\n  \n      // Wait for all itemPromises to complete before resolving\n      await Promise.all(itemPromises);\n  \n    } catch (error) {\n    }\n  };\n  \n\n  /*\n   * Checks the password against the files in database\n   *\n   */\n  const passwordHandler = async (pin) => {\n    let check = await checkPasswordRepo(pin);\n\n    if (check) {\n      setCurrentSession(pin);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const checkPasswordRepo = async (password) => {\n    let out = false;\n\n    let responses = await listAll(sessionListRef)\n      .then((response) => response)\n      .catch((error) => {\n        return false;\n      });\n\n    responses.prefixes.forEach((prefix) => {\n      if (prefix._location.path.split(\"/\")[1] === password) {\n        out = true;\n      }\n    });\n    return out;\n  };\n\n  const generateSessionHandler = async () => {\n    let randSession = Math.floor(Math.random() * 90000 + 10000);\n    let check = await checkPasswordRepo(randSession);\n\n    while (check) {\n      randSession = Math.floor(Math.random() * 90000 + 10000);\n      check = await checkPasswordRepo(randSession);\n    }\n\n    setCurrentSession(randSession);\n  };\n\n  const fetchUrls = async (item) => {\n    const url = await getDownloadURL(item);\n    setImageUrls((prev) => [...prev, url]);\n  };\n\n\n\n  ////////////////////////////\n  // APP SWITCHER\n  ////////////////////////////\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // Use the useEffect hook to apply the CSS classes based on the condition\n  useEffect(() => {\n    if (activeIndex === 0) {\n      document.body.className = \"panel-landing\";\n    } else {\n      document.body.className = \"bodyClass2\";\n    }\n\n    // Cleanup function to remove the classes when the component is unmounted\n    return () => {\n      document.body.className = \"\";\n    };\n  }, [activeIndex]);\n\n\n\n  return (\n    <>\n      <Panel isActive={activeIndex === 0}>\n        <div>\n          <Landing\n            onAction={() => setActiveIndex(1)}\n            generateSessionHandler={generateSessionHandler}\n            passwordHandler={passwordHandler}\n            refreshFiles={refreshFiles}\n          />\n        </div>\n      </Panel>\n\n      <Panel isActive={activeIndex === 1}>\n        <div className=\"panel1\">\n          <UploadDownload\n            onAction={() => setActiveIndex(0)}\n            currentSession={currentSession}\n            setImageHolder={setImageHolder}\n            uploadImageHandler={uploadImageHandler}\n            deleteImageHandler={deleteImageHandler}\n            setImageList={setImageList}\n            setImageUrls={setImageUrls}\n            imageListRef={imageListRef}\n            fetchUrls={fetchUrls}\n            imageList={imageList}\n            downloadImageHandler={downloadImageHandler}\n            deleteSingleHandler={deleteSingleHandler}\n            refresh={refresh}\n            refreshFiles={refreshFiles}\n            setFiles={setFiles}\n            getObjectInfo={getObjectInfo}\n            files={files}\n          />\n        </div>\n      </Panel>\n    </>\n  );\n\n  ////////////////////////////\n  // END APP SWITCHER\n  ////////////////////////////\n}\n\nfunction Panel({ children, isActive }) {\n  return (\n    <section className=\"panel\">{isActive ? <p>{children}</p> : null}</section>\n  );\n}\n\nexport function Landing({ onAction, generateSessionHandler, passwordHandler, refreshFiles }) {\n  const [AuthPin, setAuthPin] = useState(\"\");\n\n  const handleAuth = (v) => {\n    if (v.length <= 5) {\n      setAuthPin(v);\n    }\n  };\n\n  function generateCode() {\n    onAction();\n    generateSessionHandler();\n  }\n\n  async function handleSubmitCode() {\n    if (await passwordHandler(AuthPin)) {\n      await refreshFiles();\n      onAction();\n    }\n    else{\n      alert(\"Incorrect Pin\")\n    }\n  }\n\n  return (\n    <div class=\"center\">\n      <h1 className=\"font-link\">Firefly</h1>\n      <br></br>\n      <div className=\"button-23\">\n        <div>\n          {\n            <button className=\"button-24\" onClick={generateCode}>\n              New Session\n            </button>\n          }\n        </div>\n\n        <br></br>\n        <br></br>\n        <p>input pin:</p>\n        <input\n          value={AuthPin}\n          onChange={(e) => handleAuth(e.target.value)}\n          className=\"space\"\n          type=\"number\"\n          id=\"pin\"\n          pattern=\"\\d*\"\n          inputMode=\"numeric\"\n        />\n        <br></br>\n        <br></br>\n        <button\n          onClick={handleSubmitCode}\n          className={`button-25${AuthPin.length !== 5 ? \" disabled\" : \"\"}`}\n          disabled={AuthPin.length !== 5}\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport function UploadDownload({\n  onAction,\n  currentSession,\n  setImageHolder,\n  uploadImageHandler,\n  deleteImageHandler,\n  setImageList,\n  setImageUrls,\n  imageListRef,\n  fetchUrls,\n  imageList,\n  downloadImageHandler,\n  deleteSingleHandler,\n  refresh,\n  refreshFiles,\n  getObjectInfo,\n  setFiles,\n  files\n}) {\n\n  function triggerFileInputClick() {\n    document.getElementById(\"hiddenFileInput\").click();\n  }\n\n\n\n  return (\n    <div>\n      <Table\n        setImageList={setImageList}\n        setImageUrls={setImageUrls}\n        imageListRef={imageListRef}\n        fetchUrls={fetchUrls}\n        currentSession={currentSession}\n        imageList={imageList}\n        deleteSingleHandler={deleteSingleHandler}\n        downloadImageHandler={downloadImageHandler}\n        refresh={refresh}\n        refreshFiles={refreshFiles}\n        getObjectInfo={getObjectInfo}\n        setFiles={setFiles}\n        files={files}\n      />\n      <div className=\"sidebar\">\n        <h1 className=\"font-link-2\">Firefly</h1>\n        <div className=\"showcode\">\n          <p>code:</p>\n          <h1>{currentSession}</h1>\n        </div>\n        <br></br>\n        <br></br>\n        <br></br>\n\n        {\n          <form className=\"buttons-list\">\n            <input\n              type=\"file\"\n              id=\"hiddenFileInput\"\n              style={{ display: \"none\" }}\n              onChange={(event) => setImageHolder(event.target.files[0])}\n            />\n            <button\n              type=\"button\"\n              onClick={triggerFileInputClick}\n              className=\"button-25\"\n            >\n              Upload File\n            </button>\n            <button\n              type=\"button\"\n              className=\"button-25\"\n              onClick={uploadImageHandler}\n            >\n              Send File\n            </button>\n  \n            <br></br>\n            <br></br>\n            <button\n              type=\"button\"\n              className=\"button-26\"\n              onClick={deleteImageHandler}\n            >\n              Delete All\n            </button>\n            <br></br>\n            <button\n              type=\"button\"\n              className=\"button-26\"\n              onClick={refreshFiles}\n            >\n              Refresh\n            </button>\n          </form>\n        }\n        <br></br>\n        <div className=\"showcode-2\">\n          <p>time left</p>\n          <Timer \n            deleteImageHandler={deleteImageHandler}\n            onAction={onAction}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport function Table({\n  setImageList,\n  imageListRef,\n  currentSession,\n  deleteSingleHandler,\n  downloadImageHandler,\n  refresh,\n  refreshFiles,\n  getObjectInfo,\n  setFiles,\n  files\n}) {\n\n\n  const downloadFile = (url, name) => {\n    downloadImageHandler(url, name);\n  };\n\n  const deleteFile = async (url) => {\n    await deleteSingleHandler(url);\n    refreshFiles();\n  };\n\n\n//   async function fileList(item) {\n//     // let objectList = await Promise.all(imageList.map((item) => getObjectInfo(item)));\n//     let obj = await getObjectInfo(item);\n//     // objectList = objectList.slice(0, objectList.length / 2);\n//     setFiles(prev => [...prev, obj]);\n// }\n\n  const fetchFiles = async () => {\n    try {\n      const response = await listAll(imageListRef);\n      const filePromises = response.items.map(async (item) => {\n        const fileInfo = await getObjectInfo(item);\n        return fileInfo;\n      });\n\n      const fetchedFiles = await Promise.all(filePromises);\n      setFiles(fetchedFiles);\n    } catch (error) {\n      console.log('Error fetching files:', error);\n    }\n  };\n  \n  useEffect(() => {\n    setFiles([]);\n    fetchFiles();\n    // eslint-disable-next-line\n  }, [currentSession, refresh]);\n\n  return (\n    <div className=\"App\">\n      <table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>Download</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {files.map((file) => (\n            <tr key={file.id}>\n              <td>{file.name}</td>\n              <td>\n                <button\n                  className=\"button-25\"\n                  onClick={() => downloadFile(file.url, file.name)}\n                >\n                  Download\n                </button>\n              </td>\n              <td>\n                <button\n                  className=\"button-25\"\n                  onClick={() => deleteFile(file.url)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport function Timer({deleteImageHandler, onAction}) {\n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  // im just testing my git here so ignore this line\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState(\"00:00:00\");\n\n  const getTimeRemaining = (e) => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds,\n    };\n  };\n\n  const startTimer = (e) => {\n    let { total, hours, minutes, seconds } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to\n      // add '0' at the beginning of the variable\n      setTimer(\n        (hours > 9 ? hours : \"0\" + hours) +\n          \":\" +\n          (minutes > 9 ? minutes : \"0\" + minutes) +\n          \":\" +\n          (seconds > 9 ? seconds : \"0\" + seconds)\n      );\n    } else {\n      // When the timer reaches zero, call the deleteImageHandler\n      deleteImageHandler();\n      onAction();\n      alert(\"Time's up!\")\n  \n      // Clear the interval to stop the timer\n      if (Ref.current) clearInterval(Ref.current);\n    }\n  };\n\n  const clearTimer = (e) => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next\n    // ADJUST TO CHANGE THE AMOUNT OF TIME\n    setTimer(\"00:15:00\");\n\n    // If you try to remove this line the\n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // ADJUST THE NUMBER OF SECONDS IN THE TIMER HERE (currently 900)\n    deadline.setSeconds(deadline.getSeconds() + 900);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Another way to call the clearTimer() to start\n  // the countdown is via action event from the\n  // button first we create function to be called\n  // by the button\n\n  return (\n    <div>\n      <h1>{timer}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}